# Generated by Django 2.1.5 on 2020-02-12 09:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('app_name', models.CharField(max_length=50)),
                ('app_id', models.CharField(max_length=32)),
                ('app_secret', models.CharField(max_length=32)),
                ('token', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name': '微信应用',
                'verbose_name_plural': '微信应用',
            },
        ),
        migrations.CreateModel(
            name='MessageModel',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('Text', '文本'), ('Map', '位置'), ('Card', '名片'), ('Note', '提示'), ('Sharing', '分享'), ('Picture', '图片'), ('Recording', '语音'), ('Attachment', '文件'), ('Video', '视频'), ('Friends', '好友请求'), ('System', '系统')], max_length=15, verbose_name='消息类型')),
                ('create_time', models.DateTimeField(verbose_name='创建时间')),
                ('receive_time', models.DateTimeField(verbose_name='接受时间')),
                ('is_at', models.BooleanField(default=False, null=True, verbose_name='是否@')),
                ('sender_puid', models.CharField(max_length=10)),
                ('receiver_puid', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': '消息记录',
                'verbose_name_plural': '消息记录',
            },
        ),
        migrations.CreateModel(
            name='WxGroupModel',
            fields=[
                ('puid', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, verbose_name='名称')),
                ('nick_name', models.CharField(max_length=32, verbose_name='昵称')),
                ('user_name', models.CharField(max_length=80)),
                ('avatar', models.ImageField(upload_to='media/avatar/groups/%Y/%m/%d', verbose_name='头像')),
            ],
            options={
                'verbose_name': '微信群组',
                'verbose_name_plural': '微信群组',
            },
        ),
        migrations.CreateModel(
            name='WxMpsModel',
            fields=[
                ('puid', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, verbose_name='名称')),
                ('nick_name', models.CharField(max_length=32, verbose_name='昵称')),
                ('province', models.CharField(max_length=15, null=True, verbose_name='省')),
                ('city', models.CharField(max_length=15, null=True, verbose_name='市')),
                ('signature', models.CharField(max_length=255, null=True, verbose_name='签名')),
            ],
            options={
                'verbose_name': '微信公众号',
                'verbose_name_plural': '微信公众号',
            },
        ),
        migrations.CreateModel(
            name='WxUserModel',
            fields=[
                ('puid', models.CharField(help_text='微信用户的外键', max_length=15, primary_key=True, serialize=False, verbose_name='PUID')),
                ('name', models.CharField(max_length=32, null=True, verbose_name='名称')),
                ('nick_name', models.CharField(max_length=32, null=True, verbose_name='昵称')),
                ('user_name', models.CharField(max_length=80, null=True, verbose_name='用户名')),
                ('remark_name', models.CharField(max_length=32, null=True, verbose_name='备注名')),
                ('avatar', models.ImageField(upload_to='media/avatar/users/%Y/%m/%d', verbose_name='头像')),
                ('signature', models.CharField(max_length=255, null=True, verbose_name='签名')),
                ('sex', models.IntegerField(choices=[(1, '男'), (2, '女')], null=True, verbose_name='性别')),
                ('province', models.CharField(max_length=15, null=True, verbose_name='省')),
                ('city', models.CharField(max_length=15, null=True, verbose_name='市')),
                ('friends', models.ManyToManyField(related_name='_wxusermodel_friends_+', to='wechat.WxUserModel', verbose_name='好友列表')),
            ],
            options={
                'verbose_name': '微信用户',
                'verbose_name_plural': '微信用户',
            },
        ),
        migrations.CreateModel(
            name='AttachmentMessage',
            fields=[
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='wechat.MessageModel')),
                ('file_size', models.CharField(max_length=20, null=True)),
                ('file', models.FileField(max_length=500, upload_to='media/file/%Y/%m/%d')),
            ],
            options={
                'verbose_name': '文件消息',
                'verbose_name_plural': '文件消息',
            },
        ),
        migrations.CreateModel(
            name='CardMessage',
            fields=[
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='wechat.MessageModel')),
                ('username', models.CharField(max_length=50)),
                ('nickname', models.CharField(max_length=50, verbose_name='昵称')),
                ('alias', models.CharField(max_length=50, verbose_name='微信号')),
                ('province', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=20)),
                ('sign', models.CharField(max_length=255)),
                ('sex', models.SmallIntegerField(choices=[(1, '男'), (2, '女')], null=True)),
                ('avatar', models.URLField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MapMessage',
            fields=[
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='wechat.MessageModel')),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('scale', models.IntegerField()),
                ('label', models.CharField(max_length=255)),
                ('maptype', models.IntegerField()),
                ('poiname', models.CharField(max_length=255)),
                ('poiid', models.CharField(blank=True, max_length=255)),
                ('url', models.CharField(max_length=500)),
                ('text', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': '位置消息',
                'verbose_name_plural': '位置消息',
            },
        ),
        migrations.CreateModel(
            name='PictureMessage',
            fields=[
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='wechat.MessageModel')),
                ('image', models.ImageField(upload_to='media/image/%Y/%m/%d', verbose_name='头像')),
                ('img_height', models.IntegerField(null=True, verbose_name='图片高度')),
                ('img_width', models.IntegerField(null=True, verbose_name='图片宽度')),
            ],
            options={
                'verbose_name': '图片消息',
                'verbose_name_plural': '图片消息',
            },
        ),
        migrations.CreateModel(
            name='RecordingMessage',
            fields=[
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='wechat.MessageModel')),
                ('voice_length', models.BigIntegerField(null=True, verbose_name='录音时间')),
                ('record', models.FileField(upload_to='media/record/%Y/%m/%d')),
            ],
            options={
                'verbose_name': '录音消息',
                'verbose_name_plural': '录音消息',
            },
        ),
        migrations.CreateModel(
            name='SharingMessage',
            fields=[
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='wechat.MessageModel')),
                ('url', models.URLField(max_length=500)),
                ('text', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': '分享消息',
                'verbose_name_plural': '分享消息',
            },
        ),
        migrations.CreateModel(
            name='TextMessage',
            fields=[
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='wechat.MessageModel')),
                ('text', models.CharField(max_length=2048, verbose_name='文本内容')),
            ],
            options={
                'verbose_name': '文本消息',
                'verbose_name_plural': '文本消息',
            },
        ),
        migrations.CreateModel(
            name='VideoMessage',
            fields=[
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='wechat.MessageModel')),
                ('play_length', models.IntegerField(null=True)),
                ('video', models.FileField(upload_to='media/video/%Y/%m/%d')),
            ],
            options={
                'verbose_name': '视频消息',
                'verbose_name_plural': '视频消息',
            },
        ),
        migrations.AddField(
            model_name='wxmpsmodel',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='wechat.WxUserModel', verbose_name='群归属'),
        ),
        migrations.AddField(
            model_name='wxgroupmodel',
            name='members',
            field=models.ManyToManyField(related_name='members', to='wechat.WxUserModel', verbose_name='群员'),
        ),
        migrations.AddField(
            model_name='wxgroupmodel',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='wechat.WxUserModel', verbose_name='群归属'),
        ),
        migrations.AddField(
            model_name='messagemodel',
            name='member',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='msg_members', to='wechat.WxUserModel'),
        ),
        migrations.AddField(
            model_name='messagemodel',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='msg_owner', to='wechat.WxUserModel', verbose_name='信息的拥有者'),
        ),
        migrations.AddField(
            model_name='messagemodel',
            name='receiver_content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receivers', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='messagemodel',
            name='sender_content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='senders', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='appmodel',
            name='bind',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='wechat.WxUserModel'),
        ),
    ]
